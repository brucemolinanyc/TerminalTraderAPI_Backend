{"version":3,"sources":["util/utilities.js","components/Navigation.js","components/HomePage.js","components/LoginPage.js","components/RegisterPage.js","components/DepositPage.js","components/BuyStockPage.js","components/SellPage.js","routers/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","Navigation","state","username","balance","componentDidMount","token","localStorage","getItem","decoded","jwt_decode","fetch","concat","user","method","mode","Navigations","Content-Type","then","response","json","data","_this","setState","toUpperCase","toFixed","replace","onClick","clear","props","history","push","react_default","a","createElement","className","href","exact","width","this","color","React","Component","withRouter","HomePage","positions","trades","api_key","match","params","id","headers","Access-Control-Allow-Origin","map","el","idx","key","Object","keys","shares","ticker","price","volume","time","src_components_Navigation","Segment","Grid","columns","textAlign","Column","Divider","vertical","LoginPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onFormLogin","e","preventDefault","document","getElementById","value","password","loginError","body","JSON","stringify","auth_token","setItem","loggedIn","inverted","style","height","verticalAlign","maxWidth","Header","as","Form","size","onSubmit","stacked","Input","fluid","icon","iconPosition","placeholder","type","Button","Message","react_router_dom","to","RegistrationPage","onFormSubmit","confirm","password_hash","registerError","DepositPage","amount","error","handleChange","target","handleSubmit","success","failure","onChange","setTimeout","window","location","reload","BuyStockPage","symbol","cost","onStockInputChange","onPurchaseInputChange","Number","high","onStockInputClick","status","isInteger","_this$state$symbol","date","open","low","stock_result","console","log","class","SellPage","AppRouter","react_router","path","component","RegisterPage","App","routers_AppRouter","Boolean","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6f931d7.chunk.js","sourcesContent":["// import React from 'react';\n\n// const baseURL = 'http://127.0.0.1:5000'\nconst baseURL = ''\n// const nothing = null \n\nexport default baseURL","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport baseURL from '../util/utilities'\n// const baseURL = ''\n\n\nimport './Navigation.css';\n\nclass Navigation extends React.Component{\n \n  state = {\n    username: '',\n    balance: ''\n  }\n\n  componentDidMount = () => {\n    const token = localStorage.getItem('token')\n    var decoded = jwt_decode(token)\n\n    fetch(baseURL + `/user/${decoded.user}`,{\n            method: 'get',\n            mode: 'cors',\n            Navigations: {\"Content-Type\": \"application/json\"},\n        })\n        .then(response => response.json())\n        .then(data => this.setState({username: data.user.toUpperCase(), balance: data.balance.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,') }))\n  }\n\n  onClick = () => {\n    localStorage.clear()\n    this.props.history.push('/')\n  }\n\n  render(){\n    return(\n    <div className=\"ui inverted menu huge black\">\n        <a className=\"red item\" href={`/home/${localStorage.getItem('api_key')}`}  exact=\"true\">Home</a>\n        <a className=\"red item\" href={`/deposit/${localStorage.getItem('api_key')}`} exact=\"true\">Deposit $</a>\n        <a className=\"red item\" href={`/buy/${localStorage.getItem('api_key')}`} exact=\"true\">Buy Stock</a>\n        <a className=\"red item\" href={`/sell/${localStorage.getItem('api_key')}`} exact=\"true\">Sell Stock</a>\n        \n        <div className=\"right menu\">\n            <div className=\"item\" width={4}>\n                <p>\n                <strong className=\"strong\">\n                Username: {this.state.username} <br></br>\n                Account: {localStorage.getItem('api_key')} <br></br>\n                <font color=\"#00ff00\">Balance: ${this.state.balance}</font>\n                </strong>\n                </p>\n            </div>\n\n           \n\n            <div className=\"right menu item\">\n                <div className=\"ui primary button\" onClick={this.onClick}>\n                Sign Out \n                </div>\n            </div>\n\n        </div>\n    </div>\n    )\n  }\n}\n\nexport default withRouter(Navigation);\n\n// <div className=\"right menu item\">\n// <div className=\"ui icon input\">\n//     <input type=\"text\" placeholder=\"Search...\" />\n//     <i\n//     aria-hidden=\"true\"\n//     className=\"search icon\"\n//     ></i>\n// </div>\n// </div>","import React from 'react';\nimport Navigation from './Navigation';\nimport { Divider, Grid, Segment} from 'semantic-ui-react';\nimport './HomePage.css'\nimport baseURL from '../util/utilities.js'\n// const baseURL = ''\n\nclass HomePage extends React.Component{\n\n    state = {\n        positions: null,\n        trades: null\n    }\n\n    componentDidMount = () => {\n        const api_key = this.props.match.params.id\n\n        fetch(baseURL + `/api/${api_key}/positions`, {\n            method: 'get',\n            mode: \"cors\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Access-Control-Allow-Origin\": \"*\"\n            }\n        }).then(response => response.json())\n        .then(data => this.setState({positions: [data.positions][0]}))\n\n        fetch( baseURL + `/api/${api_key}/alltrades`, {\n            method: 'get',\n            mode: \"cors\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Access-Control-Allow-Origin\": \"*\"}\n        })\n        .then(response => response.json())\n        .then(data => this.setState({trades: [data.trades][0]}))\n    }\n\n    render(){\n        const positions = this.state.positions && this.state.positions.map( (el, idx) => {\n            const key = Object.keys(el)\n            if(el[key].shares > 0){\n                    return <div className=\"positions\" >\n                                <div className=\"content\">\n                                    <div className=\"header\">stock: &nbsp;<strong><font color=\"blue\">{el[key].ticker}</font></strong></div>\n                                    <div className=\"meta\">amount: &nbsp;<strong><font color=\"green\">{el[key].shares}</font></strong></div>\n                                </div>\n                            </div>\n            }\n         })\n\n         const trades = this.state.trades && this.state.trades.map( (el, idx) => {\n            const key = Object.keys(el)\n                return <div className=\"trades\" key={idx}>\n                            <div className=\"content\">\n                                <div className=\"header\">stock: &nbsp;<strong><font color=\"blue\">{el[key].ticker}</font></strong> \n                                <br></br>\n                                price: ${el[key].price}\n                                </div>\n                                <div className=\"meta\">volume: &nbsp;<strong><font color=\"green\">{el[key].volume}</font></strong>\n                                <br></br>\n                                Date made: &nbsp; {el[key].time}\n                                </div>\n                            </div>\n                        </div>\n    })\n\n        return(\n            <div>\n                <Navigation/>\n                <Segment>\n                    <Grid columns={2} textAlign='center' >\n                        <Grid.Column textAlign='center'>\n                            <h2>Your Positions</h2>\n                            {positions}\n                        </Grid.Column>\n\n                        <Grid.Column textAlign='center'>\n                            <h2>Your Trade History</h2>\n                            {trades}\n                        </Grid.Column>\n                    </Grid>\n                    <Divider vertical></Divider>\n                </Segment>\n            </div>\n        )\n    }\n}\n\nexport default HomePage;","import React from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport {Link} from 'react-router-dom';\nimport baseURL from '../util/utilities'\n// const baseURL = ''\n\n\nclass LoginPage extends React.Component{\n  constructor(){\n    super()\n    \n    this.state = {\n      loggedIn: false,\n      loginError: null,\n    }\n  }\n\n  onFormLogin = (e) => {\n    e.preventDefault()\n    const username = document.getElementById('username').value\n    const password = document.getElementById('password').value\n\n    if (!username || !password){\n      this.setState({loginError: true})\n    } \n    \n    fetch(baseURL + '/login', {\n      method: 'post',\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({username: username, password: password})\n  }).then(response => response.json())\n    .then(data => { \n      if (data.auth_token){\n        localStorage.setItem('token', data['auth_token'])\n        localStorage.setItem('api_key', data['api_key'])\n      } else {\n        this.setState({loginError: true})\n    }\n      \n    if(!!localStorage.token) {\n        this.props.history.push(`/home/${data['api_key']}`)\n      }\n    }\n    )\n  }\n\n  render(){\n    \n    return(\n\n\n      <div className='login-form'>\n      {/*\n        Heads up! The styles below are necessary for the correct render of this example.\n        You can do same with CSS, the main idea is that all the elements up to the `Grid`\n        below must have a height of 100%.\n      */}\n      <style>{`\n        body > div,\n        body > div > div,\n        body > div > div > div.login-form {\n          height: 100%;\n        }\n      `}\n      </style>\n      { this.state.loginError &&  \n        <Segment inverted color='red'>\n          There is an issue with your scredentials - please try again  \n        </Segment>\n      }\n  \n      <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n     \n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n                Log-in to your account\n          </Header>\n          <Form size='large' onSubmit={this.onFormLogin}>\n            <Segment stacked>\n              <Form.Input \n              fluid \n              icon='user' \n              iconPosition='left' \n              placeholder='username' \n              id='username' />\n              <Form.Input\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                id='password'\n              />\n  \n              <Button color='teal' fluid size='large'>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            Need an account? <Link to=\"/\">Register</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </div>       \n    )\n  }\n}\n\n\nexport default LoginPage","import React from 'react';\nimport {Button, Form, Grid, Header, Message, Segment} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom';\nimport baseURL from '../util/utilities'\n// const baseURL = ''\n\n\nclass RegistrationPage extends React.Component{\n  constructor(){\n    super()\n\n    this.state = {\n      registerError: false,\n    }\n  }\n\n  onFormSubmit = (e) => {\n    e.preventDefault()\n\n    const username = document.getElementById('username').value\n    const password = document.getElementById('password').value\n    const confirm = document.getElementById('confirm_password').value\n\n    if(username && password && confirm && password === confirm ){\n        fetch( baseURL + '/create', {\n          method: 'post',\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\"\n          },\n          body: JSON.stringify({username: username, password_hash: password})\n      }).then(response => response.json())\n        .then(data => {\n          localStorage.setItem('token', data['auth_token'])\n          localStorage.setItem('api_key', data['api_key']) \n    \n        if(!!localStorage.token) {\n          this.props.history.push(`/home/${data.api_key}`)\n        }\n      }\n      )\n    } else {\n      this.setState({registerError: true})\n    }\n  }\n\n   \n\n  render(){\n    \n    return(\n    <div className='registration-form'>\n    {/*\n      Heads up! The styles below are necessary for the correct render of this example.\n      You can do same with CSS, the main idea is that all the elements up to the `Grid`\n      below must have a height of 100%.\n    */}\n    <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.registration-form {\n        height: 100%;\n      }\n    `}\n    </style>\n      { this.state.registerError &&  \n        <Segment inverted color='red'>\n          There is an issue with your credentials - please try again  \n        </Segment>\n      }\n  \n      <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='red' textAlign='center'>\n            Create an account\n        </Header>\n        <Form size='large' onSubmit={this.onFormSubmit}>\n          <Segment stacked>\n            <Form.Input fluid icon='user' iconPosition='left' placeholder='username' id='username' />\n            <Form.Input\n              fluid\n              icon='lock'\n              iconPosition='left'\n              placeholder='Password'\n              type='password'\n              id='password'\n            />\n            <Form.Input\n              fluid\n              icon='lock'\n              iconPosition='left'\n              placeholder='Confirm Password'\n              type='password'\n              id='confirm_password'\n            />\n\n            <Button color='red' fluid size='large'>\n              Register\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          Already registered? <Link to=\"/login\">Log in</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>   \n  </div>\n    )\n  }\n}\n  \n\n\n\nexport default RegistrationPage\n","import React from 'react';\nimport Navigation from './Navigation';\n// import {Button, Form, Message, Icon, Container} from 'semantic-ui-react';\nimport './DepositPage.css'\nimport baseURL from '../util/utilities'\n// const baseURL = ''\n\nclass DepositPage extends React.Component{\n    \n    state = {\n            amount: '',\n            balance: 0,\n            error: null\n            }\n\n    handleChange = (e) =>{\n        const amount = e.target.value\n        this.setState(() => ({ amount: amount }));\n    }\n  \n    handleSubmit = (e) => {\n        e.preventDefault()\n        const amount = this.state.amount\n        const api_key = localStorage.getItem('api_key')\n\n        fetch(baseURL + `/api/${api_key}/deposit`, {\n            method: 'put',\n            mode: \"cors\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Access-Control-Allow-Origin\": \"*\"},\n            body: JSON.stringify({amount: amount})\n        })\n        .then(response => response.json())\n        .then(data => {\n            if(data.balance){\n                this.setState({balance: data.balance, amount: '', error: false})\n                }\n            else if (data.error){\n                this.setState({error: true})\n            }\n            })\n    }\n  \n    // need:\n    // validation on the number that goes in \n    // a confirmation message on the Deposit\n    // Write it to the database if successful - success\n    // a denial message on the deposit if not valid \n\n\n    render(){\n        const success = this.state.error === false &&\n            <div className=\"success\">\n               <p>Your Deposit was successful. Your balance is now ${this.state.balance.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</p>\n            </div>\n        \n        const failure = this.state.error === true &&\n            <div className=\"failure\">\n               <p>Your entry was invalid - Please submit again</p>\n            </div>\n\n        return(\n            <div>\n            <Navigation/>\n                <div className=\"depositForm\">\n                    <form onSubmit={this.handleSubmit}>\n                        <h1>Deposit Funds</h1>   \n\n                        <div className=\"depositFormInput\">\n                            <input className=\"A\" placeholder=\"Enter Dollar Amount $\" value={this.state.amount} onChange={this.handleChange} />\n                        </div>     \n                        <div className=\"button\">\n                            <button>Submit</button>\n                        </div>\n                    </form>\n                    {this.state.error ? failure : success}\n                    {this.state.error !== null && setTimeout(function(){window.location.reload()}, 2500)}\n                </div>                \n            </div>\n        )\n    }\n}\n\n\nexport default DepositPage;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport { Input } from 'semantic-ui-react';\nimport baseURL from '../util/utilities'\n// const baseURL = ''\n\nclass BuyStockPage extends React.Component{\n\n    state = {\n        ticker: '',\n        symbol: '',\n        amount: '',\n        cost: '',\n        balance: 0,\n        error: null\n    }\n\n    onStockInputChange = (e) => {\n        this.setState({ticker: e.target.value})\n    }\n\n    onPurchaseInputChange = (e) => {\n        let amount = e.target.value \n        let cost = Number(amount) * Number(this.state.symbol.high)\n        this.setState({amount: e.target.value, cost: cost })\n    }\n\n    onStockInputClick = (e) => {\n        e.preventDefault()\n        fetch(`https://api.iextrading.com/1.0/stock/${this.state.ticker}/previous`)\n        .then(response => response.status == 404 ? this.setState({error: true}) : response.json()\n        .then(data => this.setState({symbol: data}))\n        )}\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const api_key = localStorage.getItem('api_key')\n        let ticker = this.state.ticker\n        let amount = Number(this.state.amount)\n       \n        if (Number.isInteger(amount)){\n                fetch(baseURL + `/api/${api_key}/buy/${ticker}/${amount}`, {\n                    method: 'post',\n                    mode: \"cors\",\n                    headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\"},\n                    body: JSON.stringify({amount: amount, ticker:ticker})\n                }).then(response => response.json())\n                .then(data => {\n                    if (data.balance){\n                        this.setState({balance: data.balance, error: false})\n                    } else if (data.error){\n                        this.setState({error: true})\n                        }\n                    })\n        } else{\n            this.setState({error:true})\n        }\n    }\n       \n    \n    render(){\n        let {symbol, date, open, high, low} = this.state.symbol\n\n        const stock_result = this.state.symbol && \n            <div className=\"stockResult\">\n                {symbol}<br></br>\n                Open: {open}, High: {high}, Low: {low} <br></br>\n                Live as of: {date}\n            </div>\n\n        const success = this.state.error === false &&\n            <div className=\"success\">\n               <p>Your Stock purchase was successful. Your balance is now ${this.state.balance.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</p>\n            </div>\n        \n        const failure = this.state.error === true &&\n            <div className=\"failure\">\n               <p>Your entry was invalid - Please submit again</p>\n            </div>\n\n        return(\n            <div>\n            <Navigation/>\n                <div className=\"depositForm\">\n                    <form onSubmit={this.handleSubmit}>\n                        <h1>Buy Stock</h1>   \n                        {console.log(this.state)}\n                        <div className=\"depositFormInput\">\n                            <div class=\"ui action input\">\n                                <input type=\"text\" placeholder=\"Lookup Stock\" onChange={this.onStockInputChange}/>\n                                <button class=\"ui button\" onClick={this.onStockInputClick}>Search</button>   \n                            </div>\n                            <br></br><br></br>\n\n                            {stock_result}\n\n                            <br></br>\n                            <div class=\"ui input\">\n                                <input type=\"text\" placeholder=\"Enter purchase amount\" onChange={this.onPurchaseInputChange} />\n                            </div>\n                            <br></br><br></br>\n\n                            <div>\n                               { this.state.amount && <p>Confirm purchase of {this.state.amount} shares of {symbol} for ${this.state.amount && Number((this.state.amount * open).toFixed(2))} </p>} \n                            </div>\n\n                            <div className=\"button\">\n                                <button>Submit</button>\n                            </div>\n                        </div>     \n                        \n                    </form>\n                    {this.state.error ? failure : success}\n                    {this.state.error !== null && setTimeout(function(){window.location.reload()}, 2500)}\n                </div>                \n            </div>\n        )\n    }\n}\n\nexport default BuyStockPage;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport { Input } from 'semantic-ui-react';\nimport jwt_decode from 'jwt-decode';\nimport  baseURL from '../util/utilities'\n// const baseURL = ''\n\n\nclass SellPage extends React.Component{\n\n    state = {\n        ticker: '',\n        symbol: '',\n        amount: '',\n        cost: '',\n        balance: 0,\n        positions: null,\n        error: null\n    }\n\n    componentDidMount = () => {\n        const api_key = localStorage.getItem('api_key')\n    \n        fetch(baseURL + `/api/${api_key}/positions`,{\n                method: 'get',\n                mode: 'cors',\n                Navigations: {\"Content-Type\": \"application/json\"},\n            })\n            .then(response => response.json())\n            .then(data => this.setState({positions: data.positions}))\n      }\n\n    onStockInputChange = (e) => {\n        this.setState({ticker: e.target.value})\n    }\n\n    onPurchaseInputChange = (e) => {\n        let amount = e.target.value \n        let cost = Number(amount) * Number(this.state.symbol.high)\n        this.setState({amount: e.target.value, cost: cost })\n    }\n\n    onStockInputClick = (e) => {\n        e.preventDefault()\n        fetch(`https://api.iextrading.com/1.0/stock/${this.state.ticker}/previous`)\n        .then(response => response.status == 404 ? this.setState({error: true}) : response.json()\n        .then(data => this.setState({symbol: data}))\n        )}\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const api_key = localStorage.getItem('api_key')\n        let ticker = this.state.ticker\n        let amount = Number(this.state.amount)\n       \n        if (Number.isInteger(amount)){\n                fetch(baseURL + `/api/${api_key}/sell/${ticker}/${amount}`, {\n                    method: 'post',\n                    mode: \"cors\",\n                    headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\"},\n                    body: JSON.stringify({amount: amount, ticker:ticker})\n                }).then(response => response.json())\n                .then(data => {\n                    if (data.balance){\n                        this.setState({balance: data.balance, error: false})\n                    } else if (data.error){\n                        this.setState({error: true})\n                        }\n                    })\n        } else{\n            this.setState({error:true})\n        }\n    }\n       \n    \n    render(){\n        let {symbol, date, open, high, low} = this.state.symbol\n\n        const positions = this.state.positions && this.state.positions.map( (el, idx) => {\n            const key = Object.keys(el)\n                if(el[key].shares > 0){\n                    return <div className=\"positions\" >\n                                <div className=\"content\">\n                                    <div className=\"header\">stock: &nbsp;<strong><font color=\"blue\">{el[key].ticker}</font></strong></div>\n                                    <div className=\"meta\">amount: &nbsp;<strong><font color=\"green\">{el[key].shares}</font></strong></div>\n                                </div>\n                            </div>\n                }\n         })\n\n        const stock_result = this.state.symbol && \n            <div className=\"stockResult\">\n                {symbol}<br></br>\n                Open: {open}, High: {high}, Low: {low} <br></br>\n                Live as of: {date}\n            </div>\n\n        const success = this.state.error === false &&\n            <div className=\"success\">\n               <p>Your Stock sale was successful. Your balance is now ${this.state.balance.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</p>\n            </div>\n        \n        const failure = this.state.error === true &&\n            <div className=\"failure\">\n               <p>Your entry was invalid - Please submit again</p>\n            </div>\n\n        return(\n            <div>\n            <Navigation/>\n                <div className=\"depositForm\">\n                    <form onSubmit={this.handleSubmit}>\n                        <h1>Sell Stock</h1>   \n                        <div className=\"depositFormInput\">\n                            <div className=\"ui action input\">\n                                <input type=\"text\" placeholder=\"Lookup Stock\" onChange={this.onStockInputChange}/>\n                                <button className=\"ui button\" onClick={this.onStockInputClick}>Search</button>   \n                            </div>\n                            <br></br><br></br>\n                            {stock_result}\n                            {positions}\n                            <br></br>\n                            <div class=\"ui input\">\n                                <input type=\"text\" placeholder=\"Enter amount to sell\" onChange={this.onPurchaseInputChange} />\n                            </div>\n                            <br></br><br></br>\n\n                            <div>\n                               { this.state.amount && <p>Confirm sale of {this.state.amount} shares of {symbol} for ${this.state.amount && Number((this.state.amount * open).toFixed(2))} </p>} \n                            </div>\n\n                            <div className=\"button\">\n                                <button>Submit</button>\n                            </div>\n                        </div>     \n                        \n                    </form>\n                    {this.state.error ? failure : success}\n                    {this.state.error !== null && setTimeout(function(){window.location.reload()}, 2500)}\n                </div>                \n            </div>\n        )\n    }\n}\n\nexport default SellPage;\n","import React from 'react';\nimport HomePage from '../components/HomePage';\nimport LoginPage from '../components/LoginPage';\nimport RegisterPage from '../components/RegisterPage';\nimport DepositPage from '../components/DepositPage';\nimport BuyStockPage from '../components/BuyStockPage';\nimport SellPage from '../components/SellPage';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nconst AppRouter = () => (\n    <BrowserRouter>\n        <div>\n            <Switch>\n                <Route path=\"/\" component={RegisterPage} exact={true}/>\n                <Route path=\"/login\" component={LoginPage} />\n                <Route path=\"/home/:id\" component={HomePage} />\n                <Route path=\"/deposit/:id\" component={DepositPage} />\n                <Route path=\"/buy/:id\" component={BuyStockPage} />\n                <Route path=\"/sell/:id\" component={SellPage} />\n            </Switch>\n        </div>\n    </BrowserRouter>\n    \n)\n\nexport default AppRouter;","import React from 'react';\nimport AppRouter from './routers/AppRouter'\nimport './App.css';\n\n\nconst App = () => (\n    <AppRouter />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}